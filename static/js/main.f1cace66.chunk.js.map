{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["chains","chainId","name","rpcEndpoints","protocol","host","port","getActionData","actor","permission","data","from","to","quantity","getTransactionAmount","memo","payee_public_key","amount","max_fee","tpid","getContractData","account","getActions","actions","authorization","symbol","parseInt","TestApp","props","purchase","a","activeUser","ual","accountName","requestPermission","demoActions","signTransaction","expireSeconds","blocksBehind","result","setState","message","setTimeout","resetMessage","console","info","error","renderLoggedInView","state","style","styles","announcementBar","baseText","td","type","onClick","logout","button","blueBG","renderLoginButton","showModal","buttonText","this","Component","UALWrapper","setChain","event","target","value","search","window","location","URLSearchParams","get","available","filter","c","chain","anchor","Anchor","appName","service","ledger","Ledger","container","authenticators","key","TestAppConsumer","display","backgroundColor","alignItems","justifyContent","height","marginTop","flexDirection","padding","textAlign","borderRadius","color","fontSize","fontWeight","marginBottom","select","width","top","position","withUAL","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f1cace66.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Anchor } from 'ual-anchor'\nimport { Ledger } from 'ual-ledger'\nimport { UALProvider, withUAL } from 'ual-reactjs-renderer'\n\nconst chains = [{\n  chainId: 'f16b1833c747c43682f4386fca9cbb327929334a762755ebec17f6f23c9b8a12',\n  name: 'WAX (Testnet)',\n  rpcEndpoints: [{\n    protocol: 'https',\n    host: 'waxtestnet.greymass.com',\n    port: 443,\n  }]\n}]\n\nconst getActionData = (actor, permission, chainId) => {\n  // default data\n  let data = {\n    from: actor,\n    to: 'waxenkey1414',\n    quantity: getTransactionAmount(chainId),\n    memo: ''\n  }\n  switch (chainId) {\n    case '0db13ab9b321c37c0ba8481cb4681c2788b622c3abfd1f12f0e5353d44ba6e72': {\n      data = {\n        from: actor,\n        to: 'csxdbqrkklmm',\n        quantity: getTransactionAmount(chainId),\n        memo: 'ual-anchor-demo'\n      }\n      break\n    }\n    case 'b20901380af44ef59c5918439a1f9a41d83669020319a80574b804a5f95cbd7e': {\n      data = {\n        payee_public_key: 'EOS8JnB8E5DK1mn7Cs4QPWFWH3HdHTFU1UbhHz4m1skZon2U4vdPh',\n        amount: getTransactionAmount(chainId),\n        max_fee: 2000000000,\n        actor,\n        tpid: null,\n      }\n      break\n    }\n  }\n  return data\n}\n\nconst getContractData = (chainId) => {\n  // default contract/action\n  let account = 'eosio.token'\n  let name = 'transfer'\n  switch (chainId) {\n    case 'b20901380af44ef59c5918439a1f9a41d83669020319a80574b804a5f95cbd7e': {\n      account = 'fio.token'\n      name = 'trnsfiopubky'\n      break\n    }\n  }\n  return { account, name }\n}\n\nconst getActions = (actor, permission, chainId) => {\n  const { account, name } = getContractData(chainId)\n  const data = getActionData(actor, permission, chainId)\n  return {\n    actions: [\n      {\n        account,\n        name,\n        authorization: [{ actor, permission }],\n        data,\n      }\n    ],\n  }\n}\n\nconst getTransaction = async (activeUser, actor, permission, chainId) => {\n  const { account, name } = getContractData(chainId)\n  const data = getActionData(actor, permission, chainId)\n  const actions = [{\n    account,\n    name,\n    authorization: [{ actor, permission }],\n    data,\n  }]\n  const info = await activeUser.rpc.get_info()\n  const height = info.last_irreversible_block_num - 3\n  const blockInfo = await activeUser.rpc.get_block(height)\n  const timePlus = new Date().getTime() + (60 * 1000)\n  const timeInISOString = (new Date(timePlus)).toISOString()\n  const expiration = timeInISOString.substr(0, timeInISOString.length - 1)\n  return {\n    actions,\n    context_free_actions: [],\n    transaction_extensions: [],\n    expiration,\n    ref_block_num: blockInfo.block_num & 0xffff,\n    ref_block_prefix: blockInfo.ref_block_prefix,\n    max_cpu_usage_ms: 0,\n    max_net_usage_words: 0,\n    delay_sec: 0,\n  }\n}\n\nconst getTransactionAmount = (chainId) => {\n  let symbol = 'EOS'\n  let quantity = '1.0000'\n  switch (chainId) {\n    case 'f16b1833c747c43682f4386fca9cbb327929334a762755ebec17f6f23c9b8a12': {\n      symbol = 'WAX'\n      quantity = '1.00000000'\n      break\n    }\n    case 'b20901380af44ef59c5918439a1f9a41d83669020319a80574b804a5f95cbd7e': {\n      return parseInt(1.00000000, 10)\n    }\n  }\n  return `${quantity} ${symbol}`\n}\n\nclass TestApp extends Component {\n  static propTypes = {\n    ual: PropTypes.shape({\n      activeUser: PropTypes.object,\n      activeAuthenticator: PropTypes.object,\n      logout: PropTypes.func,\n      showModal: PropTypes.func,\n    }).isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      chainId: props.chainId,\n      message: '',\n    }\n  }\n\n  purchase = async () => {\n    const { ual: { activeUser } } = this.props\n    try {\n      const { accountName, chainId } = activeUser\n      let { requestPermission } = activeUser\n\n      const demoActions = getActions(accountName, requestPermission, chainId)\n      const result = await activeUser.signTransaction(demoActions, { expireSeconds: 120, blocksBehind: 3 })\n      this.setState({\n        message: `Transfer Successful!`,\n      }, () => {\n        setTimeout(this.resetMessage, 5000)\n      })\n      console.info('SUCCESS:', result)\n    } catch (e) {\n      console.error('ERROR:', e)\n    }\n  }\n\n  resetMessage = () => this.setState({ message: '' })\n\n  renderLoggedInView = () => (\n    <>\n      {!!this.state.message\n        && (\n          <div style={styles.announcementBar}>\n            <p style={styles.baseText}>{this.state.message}</p>\n          </div>\n        )\n      }\n      <table>\n        <tbody>\n          <tr>\n            <td style={styles.td}>Blockchain</td>\n            <td style={styles.td}>{this.props.ual.chains[0].name}</td>\n          </tr>\n          <tr>\n            <td style={styles.td}>Account</td>\n            <td style={styles.td}>{this.props.ual.activeUser.accountName}</td>\n          </tr>\n          <tr>\n            <td style={styles.td}>Learn things here plz</td>\n            <td style={styles.td}>{this.props.ual.activeUser.accountName}</td>\n          </tr>\n        </tbody>\n      </table>\n      <tr>\n      <button type='button' onClick={this.props.ual.logout} style={styles.logout}>\n        <p>Logout</p>\n      </button>\n      </tr>\n      <tr>\n        <br />\n      <td> <button type='button' onClick={this.purchase} style={{ ...styles.button, ...styles.blueBG }}>\n        <p style={styles.baseText}>{`Transfer 1.0000`}</p>\n      </button>\n      </td>\n      </tr>\n    </>\n  )\n\n  renderLoginButton = () => (\n    <button type='button' onClick={this.props.ual.showModal} style={styles.button}>\n      <p style={{buttonText: styles.buttonText, baseText: styles.baseText}}>Login</p>\n    </button>\n  )\n\n  render() {\n    const { ual: { activeUser } } = this.props\n    return (activeUser) ? this.renderLoggedInView() : this.renderLoginButton()\n  }\n}\n\nclass UALWrapper extends Component {\n  constructor(props) {\n    super(props)\n    const search = window.location.search\n    const params = new URLSearchParams(search)\n    const chainId = params.get('chain')\n    this.state = {\n      chainId: chainId || chains[0].chainId\n    }\n  }\n  setChain = (event) => this.setState({ chainId: event.target.value })\n  render () {\n    const { chainId } = this.state\n    const { available } = this.props\n    const [ chain ] = available.filter((c) => c.chainId === chainId)\n    if (!chain) {\n      return (\n        <div>Invalid Chain ID</div>\n      )\n    }\n    const anchor = new Anchor([chain], {\n      // Required: The name of the app requesting a session\n      appName: 'ual-anchor-demo',\n      // Optional: define your own endpoint or eosjs JsonRpc client\n      // rpc: new JsonRpc('https://jungle.greymass.com'),\n      // Optional: define API for session management, defaults to cb.anchor.link\n      service: 'https://cb.anchor.link'\n    })\n    const ledger = new Ledger([chain])\n    return (\n      <div style={styles.container}>\n        <UALProvider\n          appName='Anchor + Authenticator Test App'\n          authenticators={[anchor, ledger]}\n          chains={[chain]}\n          key={chain.chainId}\n        >\n          <TestAppConsumer />\n        </UALProvider>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'top',\n    height: '100vh',\n    marginTop: '10vh',\n    flexDirection: 'column',\n  },\n  button: {\n    padding: '10px 60px',\n    backgroundColor: '#EA2E2E',\n    textAlign: 'center',\n    borderRadius: 5,\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: '2em',\n  },\n  select: {\n    textAlign: 'center',\n    borderRadius: 50,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '200px',\n  },\n  logout: {\n    marginTop: 20,\n  },\n  baseText: {\n    color: '#fff',\n    fontSize: 18,\n  },\n  blueBG: {\n    backgroundColor: '#447DD8',\n  },\n  announcementBar: {\n    width: '100%',\n    padding: '10px 50px 10px 20px',\n    textAlign: 'center',\n    backgroundColor: '#3de13d',\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n  },\n}\n\nconst TestAppConsumer = withUAL(TestApp)\n\nconst App = () => (\n  <UALWrapper available={chains} />\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}